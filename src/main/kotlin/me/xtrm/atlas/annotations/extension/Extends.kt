package me.xtrm.atlas.annotations.extension

import kotlin.annotation.AnnotationRetention.RUNTIME
import kotlin.annotation.AnnotationTarget.CLASS
import kotlin.annotation.AnnotationTarget.TYPE
import kotlin.reflect.KClass

/**
 * Declares the mapping classes extended by this proxy class.
 *
 * This would usually automatically generated by
 * [atlas-gradle](https://github.com/atlas-fw/atlas-gradle) during compilation.
 *
 * Taking this example proxy declaration:
 * ```java
 * package my.pkg;
 *
 * // Stubs
 * import net.minecraft.client.gui.GuiButton;
 * import net.minecraft.client.gui.GuiScreen;
 * import net.minecraft.client.Minecraft;
 *
 * public class GuiProxy extends GuiScreen {
 *     private final int value;
 *
 *     public GuiProxy(int value) {
 *         super("string constructor value");
 *
 *         this.value = value;
 *     }
 *
 *     @Override
 *     public void initGui() {
 *         super.initGui();
 *
 *         this.buttonList.add(new GuiButton(1, 20, 20, "Cool text bro"));
 *     }
 *
 *     public static void display() {
 *         Minecraft.getMinecraft().displayGuiScreen(new GuiProxy(123));
 *     }
 * }
 * ```
 *
 * The corresponding compiled proxy class may be represented as such:
 * ```java
 * package my.pkg;
 *
 * import me.xtrm.atlas.annotations.extension.*;
 * import me.xtrm.atlas.api.client.gui.GuiScreen;
 * import me.xtrm.atlas.api.client.MinecraftClient;
 * import me.xtrm.atlas.runtime.AtlasRuntime;
 *
 * @Extends(GuiScreen.class)
 * public abstract class GuiProxy {
 *     // Generated
 *     private static final MinecraftClient _STATIC_MinecraftClient =
 *             AtlasRuntime.requireStatic(MinecraftClient.class);
 *     private final Object _SELF;
 *
 *     private final int value;
 *
 *     public GuiProxy(int value) {
 *         // This call will be replaced to a call to super constructor
 *         AtlasRuntime.superConstruct(
 *             "(Ljava/lang/String;)V",
 *             new Object[] {"string constructor value"}
 *         );
 *
 *         this.value = value;
 *     }
 *
 *     @ExtensionMember("initGui()V", source = {GuiScreen.class})
 *     public void initGui() {
 *         ((GuiScreen) _SELF).initGui();
 *
 *         ((GuiScreen) _SELF).getButtonList().add(
 *                 // this syntax isn't final, mainly for representation purposes for now.
 *                 AtlasRuntime.proxyBuilder(GuiButton.class)
 *                         .construct(1, 20, 20, "Cool text bro")
 *         );
 *     }
 *
 *     public static void display() {
 *         // Automatically stored locally once (FIXME: is it final?)
 *         // TODO(@xtrm-en): maybe add a toggle to this compiler behavior?
 *         MinecraftClient _VIRTUAL_MinecraftClient1 =
 *                 _STATIC_MinecraftClient.getMinecraft();
 *
 *         _VIRTUAL_MinecraftClient1.displayGuiScreen(
 *                 AtlasRuntime.proxyBuilder(GuiProxy.class)
 *                         .construct(123)
 *         );
 *     }
 * }
 * ```
 *
 * @see ExtensionMember
 *
 * @author xtrm
 * @since 0.0.1
 */
@Target(TYPE, CLASS)
@Retention(RUNTIME)
annotation class Extends(
    @get:JvmName("value") vararg val classes: KClass<*>
)
